name: Deploy to Production

on:
  push:
    branches: [main, production]
  workflow_dispatch:

env:
  NODE_VERSION: '22'
  PHP_VERSION: '8.4'
  SERVER_IP: ${{ secrets.SERVER_IP }}
  SERVER_PATH: ${{ secrets.SERVER_PATH }}
  REMOTE_USER: ${{ secrets.REMOTE_USER }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🧩 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🧰 Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: 🧰 Cache Node dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: 📦 Install Composer dependencies using Sail image
        run: |
          echo "📦 Installing Composer dependencies inside Sail image..."
          docker run --rm \
            -v $(pwd):/app \
            -w /app \
            laravelsail/php84-composer:latest \
            composer install --no-dev --optimize-autoloader --no-interaction --prefer-dist

      - name: ⚡ Install and build frontend assets
        run: |
          npm ci
          npm run build

      - name: 🧳 Prepare deployment package
        run: |
          echo "📦 Packaging application..."
          tar -czf deploy.tar.gz \
            --exclude=storage \
            --exclude=node_modules \
            --exclude=.git \
            --exclude=.github \
            --exclude=tests \
            --exclude=docker-compose.yml \
            .

      - name: 🚀 Deploy to production server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.SERVER_IP }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "deploy.tar.gz"
          target: "${{ env.SERVER_PATH }}"

      - name: 🧩 SSH into server and finalize deployment
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ env.SERVER_IP }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ${{ env.SERVER_PATH }}
            echo "🧹 Cleaning up old deployment..."
            tar -xzf deploy.tar.gz
            rm deploy.tar.gz

            echo "🐳 Starting Sail containers..."
            ./vendor/bin/sail up -d

            echo "📦 Running migrations..."
            ./vendor/bin/sail artisan migrate --force

            echo "🧼 Clearing cache..."
            ./vendor/bin/sail artisan optimize:clear
            ./vendor/bin/sail artisan config:cache
            ./vendor/bin/sail artisan route:cache
            ./vendor/bin/sail artisan view:cache

            echo "📦 Building production assets..."
            ./vendor/bin/sail npm ci
            ./vendor/bin/sail npm run build

            echo "🛑 Stopping containers (optional)..."
            ./vendor/bin/sail down

            echo "✅ Deployment completed successfully!"
